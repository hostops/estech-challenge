/*
 * WPCEM API
 * WPCEM API documentation
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * SystemDeviceDataDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-06T16:15:45.073+02:00[Europe/Ljubljana]")public class SystemDeviceDataDTO {
  /**
   * Gets or Sets dataType
   */
  @JsonAdapter(DataTypeEnum.Adapter.class)
  public enum DataTypeEnum {
    VIRTUAL("VIRTUAL"),
    REAL("REAL");

    private String value;

    DataTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DataTypeEnum fromValue(String text) {
      for (DataTypeEnum b : DataTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DataTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DataTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DataTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DataTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("dataType")
  private DataTypeEnum dataType = null;

  @SerializedName("dataValue")
  private Double dataValue = null;

  @SerializedName("deviceId")
  private Long deviceId = null;

  @SerializedName("deviceSerialNumber")
  private String deviceSerialNumber = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  @SerializedName("unit")
  private String unit = null;
  public SystemDeviceDataDTO dataType(DataTypeEnum dataType) {
    this.dataType = dataType;
    return this;
  }

  

  /**
  * Get dataType
  * @return dataType
  **/
  @Schema(required = true, description = "")
  public DataTypeEnum getDataType() {
    return dataType;
  }
  public void setDataType(DataTypeEnum dataType) {
    this.dataType = dataType;
  }
  public SystemDeviceDataDTO dataValue(Double dataValue) {
    this.dataValue = dataValue;
    return this;
  }

  

  /**
  * Get dataValue
  * @return dataValue
  **/
  @Schema(required = true, description = "")
  public Double getDataValue() {
    return dataValue;
  }
  public void setDataValue(Double dataValue) {
    this.dataValue = dataValue;
  }
  public SystemDeviceDataDTO deviceId(Long deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  

  /**
  * Get deviceId
  * @return deviceId
  **/
  @Schema(description = "")
  public Long getDeviceId() {
    return deviceId;
  }
  public void setDeviceId(Long deviceId) {
    this.deviceId = deviceId;
  }
  public SystemDeviceDataDTO deviceSerialNumber(String deviceSerialNumber) {
    this.deviceSerialNumber = deviceSerialNumber;
    return this;
  }

  

  /**
  * Get deviceSerialNumber
  * @return deviceSerialNumber
  **/
  @Schema(description = "")
  public String getDeviceSerialNumber() {
    return deviceSerialNumber;
  }
  public void setDeviceSerialNumber(String deviceSerialNumber) {
    this.deviceSerialNumber = deviceSerialNumber;
  }
  public SystemDeviceDataDTO id(Long id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }
  public SystemDeviceDataDTO name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public SystemDeviceDataDTO timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  

  /**
  * Get timestamp
  * @return timestamp
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }
  public SystemDeviceDataDTO unit(String unit) {
    this.unit = unit;
    return this;
  }

  

  /**
  * Get unit
  * @return unit
  **/
  @Schema(description = "")
  public String getUnit() {
    return unit;
  }
  public void setUnit(String unit) {
    this.unit = unit;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemDeviceDataDTO systemDeviceDataDTO = (SystemDeviceDataDTO) o;
    return Objects.equals(this.dataType, systemDeviceDataDTO.dataType) &&
        Objects.equals(this.dataValue, systemDeviceDataDTO.dataValue) &&
        Objects.equals(this.deviceId, systemDeviceDataDTO.deviceId) &&
        Objects.equals(this.deviceSerialNumber, systemDeviceDataDTO.deviceSerialNumber) &&
        Objects.equals(this.id, systemDeviceDataDTO.id) &&
        Objects.equals(this.name, systemDeviceDataDTO.name) &&
        Objects.equals(this.timestamp, systemDeviceDataDTO.timestamp) &&
        Objects.equals(this.unit, systemDeviceDataDTO.unit);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(dataType, dataValue, deviceId, deviceSerialNumber, id, name, timestamp, unit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemDeviceDataDTO {\n");
    
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    dataValue: ").append(toIndentedString(dataValue)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    deviceSerialNumber: ").append(toIndentedString(deviceSerialNumber)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
